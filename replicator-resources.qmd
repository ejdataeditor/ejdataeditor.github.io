---
title: "Replicator Resources"
---

## Environments

* What is an environment?
* Why does my code not work on your computer


### python


* create a conda env from a supplied yml file

```bash
(base) 11:49:15 - nuvolos:/files$ conda env create -f /files/Replication_package_Agostini_Bloise_Tancioni/DML_python/environment.yml

done
#
# To activate this environment, use
#
#     $ conda activate ectj_abt
#
# To deactivate an active environment, use
#
#     $ conda deactivate

(base) 09:52:23 - nuvolos:/files/Replication_package$ conda activate ectj_abt
(ectj_abt) 09:55:17 - nuvolos:/files/Replication_package$ python --version
Python 3.9.7
(ectj_abt) 09:55:31 - nuvolos:/files/Replication_package$ python Main.py
Conda environment ectj_abt already exists. Skipping creation.
Running the estimation for dml_JJ...

```


## Data Citations for exeriments

If you generate your own data via an experiment, of course you cannot cite it. If you use data from a previously published experiment, you could cite it. So: no, you don't need either citation or a DAS if you use exclusively your own generated data. You do not need the zenodo DOI. you will obtain this at the very end of the process, so that people (including yourselves) can cite your package (including generated data) in the future.


## working on nuvolos

### creating a new instance

![](img/nuvolos-create-1.png)


![](img/nuvolos-create-2.png)

![](img/nuvolos-create-3.png)

### large files

![](img/nuvolos-large-upload.png)

```
(base) nuvolos@nuvolos:/files$ ls
'"Daniel Ershov - MS20210603_replication.zip"; filename*=UTF-8'\'''\''Daniel%20Ershov%20-%20MS20210603_replication.zip'   replication
(base) nuvolos@nuvolos:/files$ mv '"Daniel Ershov - MS20210603_replication.zip"; filename*=UTF-8'\'''\''Daniel%20Ershov%20-%20MS20210603_replication.zip' package.zip
(base) nuvolos@nuvolos:/files$ ls
package.zip  replication
(base) nuvolos@nuvolos:/files$ mv package.zip /space_mounts/large_files/ershov/
```


## Things that don't work

* you cannot just include your direct dependencies in the package and hope that just works.
* you will miss upstream dependencies. RcppEigen was not provided here.

```R
> install.packages("HDLPrepro_1.12.tar.gz", repos = NULL, type = "source")
Installing package into ‘/usr/local/lib/R/site-library’
(as ‘lib’ is unspecified)
ERROR: dependencies ‘bigtime’, ‘desla’, ‘ggpubr’, ‘rrpack’, ‘tsDyn’, ‘vars’, ‘RcppProgress’, ‘sitmo’ are not available for package ‘HDLPrepro’
* removing ‘/usr/local/lib/R/site-library/HDLPrepro’
Warning in install.packages :
  installation of package ‘HDLPrepro_1.12.tar.gz’ had non-zero exit status
> 
> install.packages("Backup copies of other packages/bigtime_0.2.2.tar.gz", repos = NULL, type = "source")
Installing package into ‘/usr/local/lib/R/site-library’
(as ‘lib’ is unspecified)
ERROR: dependencies ‘corrplot’, ‘RcppEigen’ are not available for package ‘bigtime’
* removing ‘/usr/local/lib/R/site-library/bigtime’
Warning in install.packages :
  installation of package ‘Backup copies of other packages/bigtime_0.2.2.tar.gz’ had non-zero exit status

```


## Unzipping Large files on MacOS does not work

* For zip files larger than 4GB, the macOS default archiver utility often fails with cryptic errors.
* a good solution is the [`p7zip`](https://sourceforge.net/projects/p7zip/) utility. Install via `brew install p7zip`
* used like this:

```
7za x large_package_to_unzip.zip dest_name
```